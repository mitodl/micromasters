version: '2.1'
services:
  db:
    image: postgres:9.6
    ports:
      - "5432"

  redis:
    image: redis:3.0.3
    ports:
      - "6379"

  elastic:
    build: elastic
    command: elasticsearch -E network.host=0.0.0.0 -E http.cors.enabled=true -E http.cors.allow-origin=* -E rest.action.multi.allow_explicit_index=false
    ports:
      - "9100:9200"

  nginx:
    image: nginx:1.9.5
    ports:
      - "8079:8079"
    links:
      - web

  python:
    build:
      context: .
      dockerfile: Dockerfile
    command: /bin/true
    environment:
      DEBUG: 'False'
      NODE_ENV: 'production'
      DEV_ENV: 'True'  # necessary to have nginx connect to web container
      PORT: 8077
      COVERAGE_DIR: htmlcov
      DATABASE_URL: postgres://postgres@db:5432/postgres
      MICROMASTERS_SECURE_SSL_REDIRECT: 'False'
      MICROMASTERS_DB_DISABLE_SSL: 'True'
      ELASTICSEARCH_URL: elastic:9200
      CELERY_ALWAYS_EAGER: 'False'
      BROKER_URL: redis://redis:6379/4
      CELERY_RESULT_BACKEND: redis://redis:6379/4
      EXAMS_SFTP_HOST: sftp
      EXAMS_SFTP_USERNAME: odl
      EXAMS_SFTP_PASSWORD: 123
      DOCKER_HOST: ${DOCKER_HOST:-missing}
      WEBPACK_DEV_SERVER_HOST: ${WEBPACK_DEV_SERVER_HOST:-localhost}
    env_file: .env

  web:
    image: micromasters_python
    extends:
      service: python
    command: >
      /bin/bash -c '
      sleep 3 &&
      python3 manage.py collectstatic --noinput &&
      python3 manage.py migrate --no-input &&
      uwsgi uwsgi.ini --honour-stdin'
    stdin_open: true
    tty: true
    ports:
      - "8077:8077"
    links:
      - db
      - elastic
      - redis
      - sftp

  watch:
    build:
      context: .
      dockerfile: Dockerfile-node
    working_dir: /src
    command: >
      /bin/bash -c './webpack_dev_server.sh --install'
    ports:
      - "8078:8078"
    environment:
      NODE_ENV: 'productions'
      DOCKER_HOST: ${DOCKER_HOST:-missing}
      CONTAINER_NAME: 'watch'
    env_file: .env

  celery:
    image: micromasters_python
    extends:
      service: python
    command: >
      /bin/bash -c '
      sleep 3;
      celery -A micromasters.celery:app worker -B -l ${MICROMASTERS_LOG_LEVEL:-INFO}'
    links:
      - db
      - elastic
      - redis
      - sftp

  sftp:
    image: atmoz/sftp
    ports:
        - "2022:22"
    command: odl:123:1001:1001:results,results/topvue
