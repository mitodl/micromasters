db:
  image: postgres
  ports:
    - "5432"

redis:
  image: redis
  ports:
    - "6379"

web:
  build: .
  command: >
    /bin/bash -c '
    sleep 3 &&
    python3 manage.py migrate &&
    ./with_host.sh python3 manage.py runserver 0.0.0.0:8079'
  volumes:
    - .:/src
  environment:
    DEBUG: 'True'
    NODE_ENV: 'development'
    PORT: 8079
    COVERAGE_DIR: htmlcov
    DATABASE_URL: postgres://postgres@db:5432/postgres
    MICROMASTERS_USE_WEBPACK_DEV_SERVER: 'True'
    MICROMASTERS_SECURE_SSL_REDIRECT: 'False'
    MICROMASTERS_DB_DISABLE_SSL: 'True'
    CELERY_ALWAYS_EAGER: 'False'
    CELERY_RESULT_BACKEND: redis://redis:6379/4
    BROKER_URL: redis://redis:6379/4
  env_file: .env
  ports:
    - "8079:8079"
  links:
    - db
    - redis

watch:
  image: micromasters_web
  command: >
    /bin/bash -c '
    npm cache clean &&
    npm install --no-bin-links &&
    npm rebuild node-sass &&
    echo Finished npm install &&
    node ./node_modules/webpack-dev-server/bin/webpack-dev-server.js --config webpack.config.dev.js -d --content-base ./static --host 0.0.0.0 --port 8078 --progress --inline --hot'
  ports:
    - "8078:8078"
  volumes:
    - .:/src
  environment:
    NODE_ENV: 'development'

celery:
  image: micromasters_web
  command: >
    /bin/bash -c '
    sleep 3;
    celery -A micromasters worker -l debug'
  volumes_from:
    - web
  environment:
    DEBUG: 'True'
    DJANGO_LOG_LEVEL: INFO
    DATABASE_URL: postgres://postgres@db:5432/postgres
    MICROMASTERS_DB_DISABLE_SSL: 'True'
    CELERY_RESULT_BACKEND: redis://redis:6379/4
    BROKER_URL: redis://redis:6379/4
  links:
    - db
    - redis
