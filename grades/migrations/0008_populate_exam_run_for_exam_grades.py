# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-06-28 18:27
from __future__ import unicode_literals
import sys
from django.core.management.color import color_style

from django.db import migrations


def populate_exam_run_fk(apps, schema_editor):
    ProctoredExamGrade = apps.get_model('grades', 'ProctoredExamGrade')
    ExamAuthorization = apps.get_model('exams', 'ExamAuthorization')
    style = color_style()
    fake_exam_grades = []

    exam_grades = ProctoredExamGrade.objects.filter(exam_run__isnull=True)
    for exam_grade in exam_grades.iterator():
        try:
            exam_grade.exam_run = ExamAuthorization.objects.get(
                id=exam_grade.client_authorization_id
            ).exam_run
            exam_grade.save()
        except ValueError:
            fake_exam_grades.append(exam_grade)
            continue

    for fake_exam_grade in fake_exam_grades:
        sys.stdout.write(
            style.ERROR(
                '\nInvalid client_authorization_id {0} for ProctoredExamGrade {1}'.format(
                    fake_exam_grade.client_authorization_id, fake_exam_grade.id
                )
            )
        )


class Migration(migrations.Migration):

    dependencies = [
        ('grades', '0007_populate_exam_run_fk'),
    ]

    operations = [
        migrations.RunPython(populate_exam_run_fk, migrations.RunPython.noop)
    ]
